(1(clojure-mode .[(1 8 0)()"Major mode for Clojure code"single])(sass-mode .[(3 0 14)((haml-mode (3 0 14)))"Major mode for editing Sass files"single])(paredit .[(22)()"minor mode for editing parentheses  -*- Mode: Emacs-Lisp -*-"single])(slime-repl .[(20100404)((slime (20100404)))"Read-Eval-Print Loop written in Emacs Lisp"single])(highlight-parentheses .[(1 0 1)()"highlight surrounding parentheses"single])(color-theme-twilight .[(0 1)()"Twilight Colour Theme for Emacs."single])(http-twiddle .[(1 0)()"send & twiddle & resend HTTP requests"single])(perspective .[(1 6)()"switch between named \"perspectives\" of the editor"single])(haml-mode .[(3 0 14)()"Major mode for editing Haml files"single])(slime .[(20100404 1)()"Superior Lisp Interaction Mode for Emacs"single])(scpaste .[(0 3)()"Paste to the web via scp."single])(idle-highlight .[(1 0)()"highlight the word the point is on"single])(magit .[(0 8 1)()"control Git from Emacs."single])(durendal .[(0 1)((clojure-mode (1 7)) (slime (20100404)))"A bucket of tricks for Clojure and Slime."single])(htmlize .[(1 37)()"Convert buffer text and decorations to HTML."single])(furl .[(0 0 0)()"Friendly URL retrieval"single])(marmalade .[(0 0 3)((furl (0 0 1)))"Elisp interface for the Emacs Lisp package server."single])(yari .[(0 4)()"Yet Another RI interface for Emacs"single])(drag-stuff .[(0 0 3)()"Drag stuff (lines, words, region, etc...) around"single])(wrap-region .[(0 2 0)()"Wrap text with punctation or tag"single])(enclose .[(0 0 2)()"Enclose cursor within punctuation pairs"single])(html-script-src .[(0 0 2)()"Insert <script src=\"..\"> for popular JavaScript libraries"single])(mactag .[(0 0 1)()"Mode for automatically handle multiple tags files with Mactag rubygem"single])(ruby-end .[(0 0 2)()"Automatic insertion of end blocks for Ruby"single])(notify .[(2010 8 20)()"notification front-end"single])(descbinds-anything .[(1 5)((anything (1 287)))"Yet Another `describe-bindings' with `anything'."single])(undo-tree .[(0 1 6)()"Treat undo history as a tree"single])(diminish .[(0 44)()"Diminished modes are minor modes with no modeline display"single])(keywiz .[(1 4)()"Emacs key sequence quiz"single])(autopair .[(0 3)()"Automagically pair braces and quotes like TextMate"single])(furl .[(0 0 2)()"Friendly URL retrieval"single])(rvm .[(1 1)()"Emacs integration for rvm"single])(anything .[(1 287)()"open anything / QuickSilver-like candidate-selection framework"single])(anything-config .[(0 4 1)()"Predefined configurations for `anything.el'"single])(anything-match-plugin .[(1 27)()"Humane match plug-in for anything"single])(closure-template-html-mode .[(0 1)()"highlighting for google closure templates"single])(gist .[(0 5)()"Emacs integration for gist.github.com"single])(highlight-symbol .[(1 1)()"automatic and manual symbol highlighting"single])(browse-kill-ring .[(1 3)()"interactively insert items from kill-ring -*- coding: utf-8 -*-"single])(browse-kill-ring .[(1 3 1)()"interactively insert items from kill-ring -*- coding: utf-8 -*-"single])(buffer-move .[(0 4)()"swap buffers between windows"single])(dired-single .[(1 7)()"reuse the current dired buffer to visit another directory"single])(dired-single .[(1 7 0)()"reuse the current dired buffer to visit another directory"single])(php-mode .[(1 5 0)()"major mode for editing PHP code"single])(c-eldoc .[(0 5)()"helpful description of the arguments to C functions"single])(full-ack .[(0 2 1)()"a front-end for ack"single])(find-file-in-project .[(2 1)()"Find files in a project quickly."single])(project .[(1 0)()"Keep track of the current project"single])(goto-last-change .[(1 2)()"Move point through buffer-undo-list positions -*-unibyte: t; coding: iso-8859-1;-*-"single])(mac-key-mode .[(2010 1 3)()"provide mac-style key bindings on Carbon Emacs"single])(flymake-cursor .[(1 0)()"show flymake messages in the minibuffer"single])(multi-term .[(0 8 8)()"Managing multiple terminal buffers in Emacs."single])(parenface .[(1 1)()"Provide a face for parens in lisp modes."single])(redo+ .[(1 15)()"Redo/undo system for Emacs"single])(gnuplot .[(0 6 0)()"drive gnuplot from within emacs"single])(auto-indent-mode .[(0 3)()"Auto indent Minor mode"single])(nsis-mode .[(0 1)()"NSIS-mode"single])(nsis-mode .[(0 11)()"NSIS-mode"single])(speck .[(2010 5 25)()"minor mode for spell checking"single])(ergoemacs-mode .[(5 3 7)()"Ergoemacs Minor Mode"tar])(hexrgb .[(21 0)()"Functions to manipulate colors, including RGB hex strings."single])(icomplete+ .[(21 0)()"Extensions to `icomplete.el'."single])(lacarte .[(22 0)()"Execute menu items as commands, with completion."single])(synonyms .[(1 0)()"Look up synonyms for a word or phrase in a thesaurus."single])(icicles .[(22 0)((synonyms (1 0)) (lacarte (22 0)) (icomplete+ (21 0)) (hexrgb (21 0)))"Icicles Minor Mode"tar])(ecb .[(2 40)()"Emacs Code Browser"tar])(auto-complete .[(1 4 20110207)()"Auto-complete mode "tar])(predictive .[(0 19 5)()"Predictive Mode (Contains Dependencies)"tar])(rw-hunspell .[(0 2)()"special functions for Hunspell in ispell.el"single])(rw-ispell .[(0 1)()"additional functions for ispell.el"single])(rw-language-and-country-codes .[(0 1)()"Language & Country Codes"single])(yas-jit .[(0 1)()"Loads Yasnippets on demand (makes start up faster)"single])(textmate-to-yas .[(0 1)()"Import Textmate macros into yasnippet syntax"single])(textmate-to-yas .[(0 11)()"Import Textmate macros into yasnippet syntax"single])(ntcmd .[(1 0)()"major mode for editing cmd scripts"single])(org-table-comment .[(0 1)()" Org table comment modes."single])(ac-R .[(0 1)((auto-complete (1 3)))"Autocompletion routines for R"single])(anything-extension .[(0 2)()"Extension functions for anything.el"single])(powershell .[(0 2 1)()"run powershell as an inferior shell in emacs"single])(cdlatex .[(4 0)()"Fast input methods for LaTeX environments and math"single])(auto-complete-etags .[(0 2)((auto-complete (1 3)))"Auto-complete etags"single])(auto-complete-octave .[(0 1)()"Auto-complete for Octave"single])(anything-R .[(0 1 2010)()"anything-sources and some utilities for GNU R."single])(anything-el-swank-fuzzy .[(0 1 2009)()"anything-sources for el-swank-fuzzy.el"single])(anything-ipython .[(0 1 2009)()" Ipython anything"single])(auto-complete-verilog .[(0 0)()"Verukig"single])(color-file-completion .[(1 0 1)()"add colors to file completion"single])(color-theme-emacs-revert-theme .[(0 1)()"Color-theme revert to emacs colors"single])(anything-complete .[(1 86)()"completion with anything"single])(anything-obsolete .[(0 1)()"obsolete functions of anything"single])(ipython .[(2927)()"Adds support for IPython to python-mode.el"single])(el-swank-fuzzy .[(0 1)()"fuzzy symbol completion."single])(fold-dwim .[(1 2)()"Unified user interface for Emacs folding modes"single])(fold-dwim-org .[(0 1)((fold-dwim (1 2)))"Fold DWIM bound to org key-strokes."single])(fuzzy-match .[(1 4)()"fuzzy matching"single])(hideshowvis .[(0 3)()"Add markers to the fringe for regions foldable by hideshow.el"single])(w32-browser .[(21 0)()"Run Windows application associated with a file."single])(crosshairs .[(22 0)()"Highlight the current line and column."single])(csv-mode .[(1 50)()"major mode for editing comma-separated value files"single])(vline .[(1 10)()"show vertical line (column highlighting) mode."single])(hl-line+ .[(22 0)()"Extensions to hl-line.el."single])(col-highlight .[(22 0)((vline (1 10)))"Highlight the current column."single])(color-theme-vim-insert-mode .[(0 1)()"Color theme VIM insert mode"single])(cursor-chg .[(20 1)()"Change cursor dynamically, depending on the context."single])(cygwin-mount .[(2001)()"Teach EMACS about cygwin styles and mount points."single])(header2 .[(21 0)()"Support for creation and update of file headers."single])(lib-requires .[(21 0)()"Commands to list Emacs Lisp library dependencies."single])(linum-off .[(0 1)()"Provides an interface for turning line-numbering off"single])(php-completion .[(0 3)()"complete everything PHP with Anything.el"single])(pos-tip .[(0 4 5)()"Show tooltip at point -*- coding: utf-8 -*-"single])(setup-cygwin .[(21 0)()"Set up Emacs for using Cygwin"single])(viper-in-more-modes .[(0 1 3)()"vi-like keybindings for various Emacs modes"single])(yaoddmuse .[(0 1 1)()"Yet another oddmuse for Emacs"single])(key-choices .[(0 2)((color-theme-vim-insert-mode (0 1)) (color-theme-emacs-revert-theme (0 1)))"Key Choices -- Also Viper has different colors in different modes"single])(key-choices .[(0 201)((color-theme-vim-insert-mode (0 1)) (color-theme-emacs-revert-theme (0 1)))"Key Choices -- Also Viper has different colors in different modes"single])(todochiku .[(0 0 7 1)()"Todochiku with support for Growl for windows (includes icons)"tar])(tabbar .[(2 0)()"Display a tab bar in the header line"single])(tabbar .[(2 0 1)()"Display a tab bar in the header line  -*-no-byte-compile: t; -*-"single])(tabbar-ruler .[(0 2)((tabbar (2 0 1)))"Setup tabbar to look pretty..."single])(android-mode .[(0 1)()"Minor mode for Android application development"single])(elein .[(0 1)()"running leiningen commands from emacs"single])(auto-indent-mode .[(0 31)()"Auto indent Minor mode"single])(sumatra-forward .[(2008 10 8)()"Provides Sumatra Forward search"single])(org-outlook .[(0 1)()"Outlook org"single])(auto-indent-mode .[(0 32)()"Auto indent Minor mode"single])(layout-restore .[(0 4)()"keep window configuration as layout and restore it simply."single])(auto-indent-mode .[(0 34)()"Auto indent Minor mode"single]))